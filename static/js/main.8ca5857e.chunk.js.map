{"version":3,"sources":["pages/Admin/Admin.module.css","components/ShowAll/Card/Card.module.css","pages/Login/Login.module.css","functionalities/DivUpdate.module.css","pages/Post/Post.module.css","pages/ToPost/ToPost.module.css","components/ShowAll/ShowAll.module.css","Services/LoginService.js","Services/VerifyTokenService.js","Services/ContextProject.js","pages/Login/Login.jsx","pages/Post/Post.jsx","components/ShowAll/GetAll/GetAll.jsx","functionalities/CommitPost.jsx","components/DeletePost/DeletePost.jsx","components/ShowAll/Card/Card.jsx","components/ShowAll/ShowAll.jsx","functionalities/AddPost.jsx","pages/ToPost/ToPost.jsx","components/ShowPost/GetOne/GetOne.jsx","components/ShowFavorites/GetFavorites/GetFavorites.jsx","components/ShowFavorites/ShowFavorites.jsx","components/ShowPost/ShowPost.jsx","pages/User/User.jsx","components/RequireAuth/RequireAuth.jsx","functionalities/UpDatePost.jsx","functionalities/DivUpdate.jsx","pages/Admin/Admin.jsx","pages/Redirect/Redirect.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","LoginService","username","password","a","fetch","headers","method","body","JSON","stringify","ApiPost","ok","json","data","VerifyTokenService","token","ApiResponse","Context","React","createContext","TOKEN_KEY","ContextProject","props","useState","undefined","setToken","user","setUser","useEffect","verifyCurrentToken","tokenLS","localStorage","getItem","role","setTokenAll","t","setItem","login","useCallback","loginAsync","status","tokenResponse","console","log","logout","value","useMemo","Provider","UseContext","context","useContext","Error","Login","navigate","useNavigate","setUsername","setPassword","onsubmitHandler","e","preventDefault","valuePublication","window","location","reload","className","classes","onSubmit","class","onChange","target","type","placeholder","href","src","alt","Post","OnOwnedPost","userCon","MyPost","varShow","onClick","PublicationType1","ShowAll","limit","page","TransformData","Posts","_id","title","description","image","comments","map","comment","likes","length","response","MappedData","post","error","CommitPost","newToken","idPost","commitOfUser","NewPost","DeletePost","Card","GetId","SetFavorite","OnComment","SetComment","index","Math","random","posts","AddPost","newTitle","newDescription","newImage","ToPost","OnPost","setTitle","setDescription","setImage","inSendController","id","GetOne","transformData","PostArray","GetFavorites","favorites","fav","Promise","all","Result","ShowFavorites","ShowPost","User","setPosts","setPage","setFavorites","setId","setPost","like","setLike","favorite","setFavorite","commentFlag","setCommentFlag","TooglePost","fetchPosts","GetAll","GetFavs","favs","SearchPost","OnePost","OnComentHandler","GetIdHandler","Handlerlike","SetFavoriteHandler","htmlFor","name","RequireAuth","children","replace","to","UpDatePost","DivUpdate","setIdPost","Admin","setTooglePost","onPostHandler","rolePages","Redirect","App","path","element","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ca5857e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"favs\":\"Admin_favs__3S5mV\",\"search\":\"Admin_search__3fepQ\",\"ptn2\":\"Admin_ptn2__2AecN\",\"divider\":\"Admin_divider__1xz2V\",\"wrapper\":\"Admin_wrapper__-oNSK\",\"btn2\":\"Admin_btn2__2sfRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Instasivar-card\":\"Card_Instasivar-card__3cxCN\",\"Instasivar-card-header\":\"Card_Instasivar-card-header__2YW1q\",\"front\":\"Card_front__3RrUG\",\"heart1\":\"Card_heart1__1rn5T\",\"title1\":\"Card_title1__3HZF0\",\"imgclas\":\"Card_imgclas__QZ0NF\",\"Instasivar-card-content\":\"Card_Instasivar-card-content__1uQBt\",\"inpubx1\":\"Card_inpubx1__1yWeP\",\"description\":\"Card_description__n56oe\",\"cmmts\":\"Card_cmmts__2iXa9\",\"heart\":\"Card_heart__emSsu\",\"btn4\":\"Card_btn4__3ezhu\",\"divider\":\"Card_divider__1DO2B\",\"divider2\":\"Card_divider2__2oZDF\",\"hr1\":\"Card_hr1__Weaas\",\"user1\":\"Card_user1__1dSMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"log\":\"Login_log__3e3GO\",\"log1\":\"Login_log1__1k5ZW\",\"box\":\"Login_box__1-KUp\",\"user\":\"Login_user__o_5kn\",\"pass\":\"Login_pass__1CbbB\",\"btn1\":\"Login_btn1__2t_yT\",\"social-links\":\"Login_social-links__3r08v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baradd\":\"DivUpdate_baradd__15IP8\",\"ptn1\":\"DivUpdate_ptn1__TmcKp\",\"btn1\":\"DivUpdate_btn1__3OeBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__31pLj\",\"logo\":\"Post_logo__3jM2u\",\"navig\":\"Post_navig__3qxuq\",\"forms\":\"Post_forms__3AXzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baradd\":\"ToPost_baradd__TFh03\",\"ptn1\":\"ToPost_ptn1__dKb-C\",\"btn1\":\"ToPost_btn1__3Z6DK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"help\":\"ShowAll_help__2BXia\"};","const Base_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\n\r\nconst LoginService = async (username,password) => {\r\n\r\n    const ApiPost = await fetch(`${Base_URL}/auth/signin`,{\r\n        headers: \r\n            {\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: \r\n            'POST',\r\n        body: \r\n            JSON.stringify({\r\n                username: username,\r\n                password: password\r\n            })\r\n    });\r\n\r\n    if (ApiPost.ok) {\r\n        const data = await ApiPost.json();\r\n        return data;\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport default LoginService;","const Base_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\n\r\nconst VerifyTokenService = async (token) => {\r\n    const ApiResponse = await fetch(`${Base_URL}/auth/whoami`, {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${ token }`\r\n        }\r\n    })\r\n    if (ApiResponse.ok) {\r\n        const data = await ApiResponse.json();\r\n        return data;\r\n    }\r\n    return{};\r\n}\r\n\r\nexport default VerifyTokenService;","import React, { useCallback, useEffect, useState, useMemo } from \"react\"\r\nimport LoginService from \"./LoginService\";\r\nimport VerifyTokenService from \"./VerifyTokenService\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst TOKEN_KEY = \"token\";\r\n\r\nexport const ContextProject =  (props) => {\r\n    const [token, setToken] = useState(undefined);\r\n    const [user, setUser] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const verifyCurrentToken = async () => {\r\n            const tokenLS = localStorage.getItem(TOKEN_KEY);\r\n            \r\n            if(tokenLS) {\r\n                const { username, role } = await VerifyTokenService(tokenLS);\r\n\r\n                if(username && role) {\r\n                    setUser({ username, role });\r\n                    setTokenAll(tokenLS);\r\n                }\r\n            }\r\n        }\r\n        verifyCurrentToken();\r\n    }, [token])\r\n    \r\n    const setTokenAll = t => {\r\n        localStorage.setItem(TOKEN_KEY, t);\r\n        setToken(t);\r\n    }\r\n\r\n    const login = useCallback((username, password) => {\r\n        const loginAsync = async () => {\r\n            let status = false;\r\n\r\n            try {\r\n                const { token: tokenResponse } = await LoginService(username, password);\r\n\r\n                if(tokenResponse) {\r\n                    setTokenAll(tokenResponse);\r\n                    status = true;\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                console.log(\"No se pudo iniciar sesión\");\r\n            }\r\n            finally {\r\n                return status;\r\n            }\r\n        }\r\n\r\n        return loginAsync();\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setUser(undefined);\r\n        setTokenAll(undefined);\r\n    }, [])\r\n\r\n    const value = useMemo(() => ({\r\n        token: token,\r\n        user: user,\r\n        login: login,\r\n        logout: logout\r\n    }), [token, user, login, logout]);\r\n\r\n    return <Context.Provider value = { value } {...props} />\r\n}\r\n\r\nexport const UseContext = () => {\r\n    const context = React.useContext(Context);\r\n\r\n    if(!context) {\r\n        throw new Error(\"Ha ocurrido un error\");\r\n    }\r\n    return context;\r\n}","import { useState, useEffect } from \"react\";\r\nimport LoginService from \"../../Services/LoginService\";\r\nimport { UseContext } from \"../../Services/ContextProject\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport VerifyTokenService from \"../../Services/VerifyTokenService\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const { login, token } = UseContext();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const onsubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n        const logged = login(username, password);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            navigate(\"/redirect\");\r\n            //se agrega para que cargen las publicaciones al iniciar por primara vez\r\n            const valuePublication = localStorage.getItem(\"PublicationType\")\r\n            if(valuePublication ===\"owned\" || valuePublication === \"all\")\r\n            {\r\n            }else\r\n            {\r\n                localStorage.setItem('PublicationType', `all`)\r\n                window.location.reload(true)\r\n            }\r\n            //fin de lo agregado\r\n        }\r\n    }, [token, navigate])\r\n\r\n\r\n    return (\r\n        <div className={classes[\"log\"]}>\r\n            <main className={classes[\"box\"]}>\r\n                <form onSubmit={onsubmitHandler}>\r\n                    <h2 className={classes[\"log1\"]}>Login</h2>\r\n                    <div class=\"userdiv\">\r\n                        <input className={classes[\"user\"]} onChange={e => setUsername(e.target.value)} type=\"text\" placeholder=\"👤 Type your username\" />\r\n                    </div>\r\n                    <br />\r\n                    <input className={classes[\"pass\"]} onChange={e => setPassword(e.target.value)} type=\"password\" placeholder=\"👨🏻‍🦯 Type your password\" />\r\n                    <br />\r\n                    <h4>Forgot password?</h4>\r\n                    <button className={classes[\"btn1\"]}>LogIn</button>\r\n                    <br />\r\n                    <h4 >Or sign up using</h4>\r\n\r\n                    <div className={classes[\"social-links\"]}>\r\n                        <a target=\"blank\" href=\"\"><img class=\"Social_media\" src=\"https://www.svgrepo.com/show/349359/facebook.svg\" alt=\"facebook\"></img></a>\r\n                        <a target=\"blank\" href=\"\"><img class=\"Social_media\" src=\"https://www.svgrepo.com/show/349410/instagram.svg\" alt=\"instagram\"></img></a>\r\n                        <a target=\"blank\" href=\"\"><img class=\"Social_media\" src=\"https://www.svgrepo.com/show/349530/tiktok.svg\" alt=\"tiktok\"></img> </a>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./Post.module.css\"\r\nimport { UseContext } from \"../../Services/ContextProject\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Post = ({ OnOwnedPost = () => { } }) => {\r\n    const userCon = UseContext();\r\n    const navigate = useNavigate();\r\n\r\n    function MyPost(varShow) {\r\n        // cambiar a 'owned' o 'all'\r\n        localStorage.setItem('PublicationType', `${varShow}`)\r\n        window.location.reload(true)//cambiar esto por la si pueden xd\r\n        OnOwnedPost();\r\n    }\r\n\r\n\r\n    const signOff = (a) => {\r\n        a.preventDefault();\r\n        userCon.logout();\r\n        navigate(\"/login\");\r\n    }\r\n\r\n    return (\r\n        <div className={classes[\"Bodyall\"]}>\r\n            <div className={classes[\"body\"]}>\r\n                <header>\r\n                    <div className={classes[\"wrapper\"]}>\r\n                        <div className={classes[\"logo\"]}>InstaSivar</div>\r\n\r\n                        <nav className={classes[\"navig\"]}>\r\n                            <a onClick={() => { MyPost('all') }} href=\"#\">Home</a>\r\n                            <a onClick={() => { MyPost('owned') }} href=\"#\">My profile</a>\r\n                            <a onClick={signOff} href=\"#\">Log out</a>\r\n                        </nav>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post;","const Base_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\nconst token = localStorage.getItem(\"token\");\r\nconst PublicationType1 = localStorage.getItem(\"PublicationType\");// cambiar a 'owned' o 'all' para elegir el tipo de inicio\r\n\r\nconst ShowAll = async (limit,page) => {\r\n    const TransformData = (Posts) => {\r\n        if (!Posts) {\r\n            return null;\r\n        }\r\n\r\n        return{\r\n            _id: Posts._id,\r\n            title: Posts.title,\r\n            description: Posts.description,\r\n            image: Posts.image,\r\n            comments: Posts.comments.map(comment => comment),\r\n            user: Posts.user.username,\r\n            likes: Posts.likes.length,\r\n        }\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`${Base_URL}/post/${PublicationType1}?limit=${limit}&page=${page}`,{\r\n            headers: {\r\n                \"Authorization\": `Bearer ${ token }`\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        \r\n        const MappedData = data.data.map(post => TransformData(post));\r\n\r\n        return MappedData;\r\n    }\r\n    catch (error) {\r\n        console.error(error);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport default ShowAll;","\r\nconst Base_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\n\r\n//Puede pedir token\r\nconst CommitPost = async (newToken, idPost, commitOfUser) => {\r\n\r\n    const NewPost = await fetch(`${Base_URL}/post/comment/${idPost}`,\r\n    {\r\n        method: \"PATCH\",\r\n        headers: \r\n            {\r\n            'Content-Type': 'application/json',\r\n            \"Authorization\": `Bearer ${newToken}`\r\n            },\r\n        body: JSON.stringify({\r\n            description:`${commitOfUser}`\r\n        })\r\n    });\r\n\r\n    if (NewPost.ok) {\r\n        const data = await NewPost.json();\r\n        return data;\r\n    }\r\n\r\n    return (\"\");\r\n}\r\n\r\nexport default CommitPost;","const Base_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\n\r\n//Puede pedir token\r\nconst DeletePost = async (newToken, idPost) => {\r\n    const NewPost = await fetch(`${Base_URL}/post/toggle/${idPost}`,\r\n    {\r\n        method: \"PATCH\",\r\n        headers: \r\n            {\r\n            'Content-Type': 'application/json',\r\n            \"Authorization\": `Bearer ${newToken}`\r\n            },\r\n    });\r\n\r\n    if (NewPost.ok) {\r\n        const data = await NewPost.json();\r\n        return data;\r\n    }\r\n    return (\"\");\r\n}\r\n\r\nexport default DeletePost;","import classes from \"./Card.module.css\"\r\nimport { UseContext } from \"../../../Services/ContextProject\";//añadido\r\nimport CommitPost from \"../../../functionalities/CommitPost\";//añadido\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport DeletePost from \"../../DeletePost/DeletePost\";\r\n\r\nconst Card = ({ post, GetId = () => { }, SetFavorite = () => {}, OnComment= () => {} }) => {\r\n    const [comment, SetComment] = useState(\"\");\r\n    const src = post.image ?? \"https://www.softzone.es/app/uploads/2018/04/guest.png?x=480&quality=20\";\r\n    const { token } = UseContext();///añadido\r\n    const navigate = useNavigate();\r\n\r\n    const PruebaInput = (e) => {\r\n        e.preventDefault();\r\n        //Para poder comentar\r\n        console.log(comment);\r\n        const newCommit = CommitPost(token, post._id , comment);\r\n        OnComment();\r\n        SetComment(\"\");\r\n    }\r\n    const newDeletePost = (e) => {\r\n        e.preventDefault();\r\n        //Para poder comentar\r\n        const deleteMyPost = DeletePost(token, post._id);\r\n        //hacer lo mismo que OnComment para que salga\r\n    }\r\n\r\n    return (\r\n        <div className={classes[\"front\"]}>\r\n            <div className={classes[\"Instasivar-card\"]}>\r\n                <div className={classes[\"Instasivar-card-header\"]}>\r\n                    <div class=\"user\">{post.user}</div>\r\n                    <div className={classes[\"title1\"]} >{post.title}</div>\r\n                    <div className={classes[\"heart1\"]} onClick={() => { SetFavorite(); }}>⭐</div>\r\n                    {/* <div class=\"Instagram-card-time\"> 1 sem </div> */}\r\n                </div>\r\n                <div className={classes[\"divider2\"]}></div>\r\n                <button className={classes[\"btn4\"]} onClick = {newDeletePost}>Ocultar</button>\r\n\r\n                <div /* class=\"Instagram-card-image\" */>\r\n                    <img className={classes[\"imgclas\"]} src={src} alt=\"\" />\r\n                </div>\r\n\r\n                <div className={classes[\"Instasivar-card-content\"]}>\r\n\r\n                    {/*  <div className={id[\"heart\"],classes[\"button\"]}></div> */}\r\n                    <p className={classes[\"description\"]}>\r\n                        <span className={classes[\"heart\"]} onClick={() => { GetId(); }}>💓</span> {post.likes} Me gusta\r\n                    </p>\r\n                    <a ><div className={classes[\"description\"]}>{post.description}</div></a>\r\n                    <a className={classes[\"cmmts\"]} href=\"#\">Comments</a>\r\n                  {/*   <hr className={classes[\"hr1\"]} /> */}\r\n                    <div>\r\n                        {\r\n                            post.comments.map((comment, index) => (\r\n                                <ul key={Math.random()}>\r\n                                    <li key={Math.random()}>\r\n                                        <div className={classes[\"user1\"]}>{comment.user.username}</div> <div className={classes[\"descr1\"]}>: {comment.description}</div>\r\n                                    </li>\r\n                                </ul>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <br />\r\n                    <hr className={classes[\"hr1\"]} />\r\n                    <form onSubmit={PruebaInput}>\r\n                        <input className={classes[\"inpubx1\"]} value={comment} onChange={e => SetComment(e.target.value)} type=\"text\" placeholder=\"Add a comment\" />\r\n                        <div className={classes[\"divider\"]}></div>\r\n                        <button className={classes[\"btn4\"]}>Post 💬</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from \"./Card/Card\";\r\nimport classes from \"./ShowAll.module.css\"\r\n\r\nconst ShowAll = ({ posts = [], GetId = () => { }, SetFavorite = () => { }, OnComment = () => {} }) => {\r\n\r\n    return (\r\n        <div className={classes[\"help\"]}>\r\n            {\r\n                posts.map(post => {\r\n                    return <Card key={post._id} post={post} GetId={() => { GetId(post._id) }} SetFavorite={() => { SetFavorite(post._id) }} OnComment={((OnComment))}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowAll;","\r\nconst Base_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\n\r\n//Puede pedir token\r\nconst AddPost = async (newToken, newTitle, newDescription, newImage) => {\r\n\r\n    const NewPost = await fetch(`${Base_URL}/post/create`,\r\n    {\r\n        method: \"POST\",\r\n        headers: \r\n            {\r\n            'Content-Type': 'application/json',\r\n            \"Authorization\": `Bearer ${newToken}`\r\n            },\r\n        body: JSON.stringify({\r\n            title:`${newTitle}`,\r\n            description: `${newDescription}`,\r\n            image:`${newImage}`\r\n        })\r\n    });\r\n\r\n    if (NewPost.ok) {\r\n        const data = await NewPost.json();\r\n        return data;\r\n    }\r\n\r\n    return (\"\");\r\n}\r\n\r\nexport default AddPost;","import AddPost from \"../../functionalities/AddPost\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { UseContext } from \"../../Services/ContextProject\";\r\nimport classes from \"./ToPost.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ToPost = ({OnPost= () => {}}) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const { token } = UseContext();\r\n\r\n    const inSendController = async (a) => {\r\n        a.preventDefault();\r\n    }\r\n    function pushPicture() {////arreglar y revisar más tarde\r\n        function bueno() {\r\n            const funAdd = AddPost(token, title, description, image);\r\n            console.log(\"Usted a realizado una nueva publicación\");\r\n            OnPost();\r\n        }\r\n        bueno();\r\n    };\r\n    return (\r\n        <div className={classes[\"baradd\"]} >\r\n            <form onSubmit={inSendController}>\r\n                <input className={classes[\"ptn1\"]} onChange={a => setTitle(a.target.value)} id=\"titleText\" type=\"text\" placeholder=\"Title of post\" />\r\n\r\n                <input className={classes[\"ptn1\"]} onChange={a => setDescription(a.target.value)} id=\"descriptionText\" type=\"text\" placeholder=\"Add feelings\" />\r\n\r\n                <input className={classes[\"ptn1\"]} onChange={a => setImage(a.target.value)} id=\"imageText\" type=\"text\" placeholder=\"URL of img\" />\r\n\r\n                <button className={classes[\"btn1\"]} onClick={pushPicture}>Publish</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default ToPost;","const Base_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst GetOne = async (id) => {\r\n    const transformData = (Posts) => {\r\n        if (!Posts) {\r\n            return null;\r\n        }\r\n        return {\r\n            _id: Posts._id,\r\n            title: Posts.title,\r\n            description: Posts.description,\r\n            image: Posts.image,\r\n            comments: Posts.comments.map(comment => comment),\r\n            user: Posts.user.username,\r\n            likes: Posts.likes.length,\r\n        }\r\n    }\r\n\r\n\r\n    try {\r\n        const response = await fetch(`${Base_URL}/post/one/${id}`, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n        const data = await response.json();\r\n\r\n        const PostArray = transformData(data)\r\n        return PostArray;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport default GetOne;","import GetOne from \"../../ShowPost/GetOne/GetOne\";\r\n\r\nconst Base_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst GetFavorites = async () => {\r\n    \r\n\r\n    const response = await fetch(`${Base_URL}/post/fav`,{\r\n        headers: {\r\n            \"Authorization\": `Bearer ${ token }`\r\n        }\r\n    })\r\n    const data = await response.json();\r\n\r\n    const MappedData = data.favorites.map(fav => GetOne(fav));\r\n    const Result = await Promise.all(MappedData);\r\n    return Result;\r\n\r\n\r\n}\r\n\r\nexport default GetFavorites;","import GetOne from \"../ShowPost/GetOne/GetOne\";\r\nimport Card from \"../ShowAll/Card/Card\";\r\n\r\nconst ShowFavorites = ({favorites = [], GetId = () => { }, SetFavorite = () => { }, OnComment = () => {}}) => {\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                favorites.map(fav => {\r\n                    if(fav._id=== undefined){}\r\n                    else{return <Card key={fav._id} post={fav} GetId={() => { GetId(fav._id) }} SetFavorite={() => { SetFavorite(fav._id) }} OnComment={((OnComment))}/>}\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowFavorites;\r\n\r\n","import Card from \"../ShowAll/Card/Card\";\r\n\r\nconst ShowPost = ({post = [], GetId = () => { }, SetFavorite = () => { }}) => {\r\n    if (!post) {\r\n        return <div></div>\r\n    }\r\n    else{\r\n        if (typeof post === 'undefined') {\r\n            <div></div>\r\n        }\r\n        else {\r\n            return(\r\n                <div>\r\n                    {\r\n                        <Card key={post._id} post={post} GetId={() => { GetId(post._id) }} SetFavorite={() => { SetFavorite(post._id) }}/>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShowPost;","import { useState, useEffect } from \"react\";\r\nimport Post from \"../Post/Post\";\r\nimport GetAll from \"../../components/ShowAll/GetAll/GetAll\";\r\nimport ShowAll from \"../../components/ShowAll/ShowAll\";\r\nimport ToPost from \"../ToPost/ToPost\";\r\nimport GetFavorites from \"../../components/ShowFavorites/GetFavorites/GetFavorites\";\r\nimport ShowFavorites from \"../../components/ShowFavorites/ShowFavorites\";\r\nimport GetOne from \"../../components/ShowPost/GetOne/GetOne\";\r\nimport ShowPost from \"../../components/ShowPost/ShowPost\";\r\n\r\nimport classes from \"../Admin/Admin.module.css\"\r\n\r\nconst User = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [id, setId] = useState(null);\r\n    const [post, setPost] = useState(null);\r\n    const [like, setLike] = useState(null);\r\n    const [favorite, setFavorite] = useState(null);\r\n    const [commentFlag, setCommentFlag] = useState(false);\r\n    const [TooglePost, setTooglePost] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const data = await GetAll(10, page);\r\n                setPosts(data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        fetchPosts();\r\n    }, [page, like, commentFlag,TooglePost]);\r\n\r\n    useEffect(() => {\r\n        const GetFavs = async () => {\r\n            try {\r\n                const favs = await GetFavorites();\r\n                setFavorites(favs);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        GetFavs();\r\n    }, [favorite,like, commentFlag]);\r\n\r\n    const Previous = () => {\r\n        if (page != 0) {\r\n            setPage(page - 1);\r\n        }\r\n    }\r\n\r\n    const Next = () => {\r\n        setPage(page + 1);\r\n    }\r\n\r\n    const SearchPost = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(id);\r\n        const OnePost = await GetOne(id);\r\n        if (OnePost === undefined) {\r\n            console.log(OnePost);\r\n            setPost(\"\");\r\n        }\r\n        else{\r\n            console.log(OnePost);\r\n            setPost(OnePost);\r\n        }\r\n            \r\n    }\r\n\r\n    const onPostHandler = () => {\r\n        setTooglePost(!TooglePost);\r\n    }\r\n\r\n    const OnComentHandler = () => {\r\n        setCommentFlag(!commentFlag);\r\n    }\r\n\r\n    const GetIdHandler = async (id) => {\r\n        console.log(id);\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const Handlerlike = await fetch(`https://posts-pw2021.herokuapp.com/api/v1/post/like/${id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        console.log(Handlerlike);\r\n        setLike(Handlerlike);\r\n\r\n        console.log(like)\r\n    }\r\n\r\n    const SetFavoriteHandler = async (id) => {\r\n        console.log(id);\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const favorite = await fetch(`https://posts-pw2021.herokuapp.com/api/v1/post/fav/${id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        });\r\n        setFavorite(favorite);\r\n    }\r\n\r\n    return (\r\n        <div className={classes[\"favs\"]}>\r\n            <Post />\r\n            <ShowAll posts={posts} GetId={GetIdHandler} SetFavorite={SetFavoriteHandler} OnComment={OnComentHandler}/>\r\n            <div className={classes[\"wrapper\"]} >\r\n                <div className={classes[\"divider\"]}></div>\r\n                <button className={classes[\"btn2\"]} onClick={Previous} type=\"click\">Previous Page</button>\r\n                <div className={classes[\"divider\"]}></div>\r\n                <button className={classes[\"btn2\"]} onClick={Next} type=\"click\">Next Page</button>\r\n                <div>\r\n            </div>\r\n\r\n                <hr />\r\n                <h2> Favorites</h2>\r\n                <ShowFavorites favorites={favorites} GetId={GetIdHandler} SetFavorite={SetFavoriteHandler} OnComment={OnComentHandler}/>\r\n            </div>\r\n            <div className={classes[\"search\"]}>\r\n                <h2>Search specific post</h2>\r\n                <form onSubmit={SearchPost}>\r\n                    <label htmlFor=\"Buscar_post\">Insert Id:</label>\r\n                    <div className={classes[\"divider\"]}></div>\r\n                    <input className={classes[\"ptn2\"]} type=\"text\" name=\"Buscar_post\" onChange={e => setId(e.target.value)} />\r\n                    <div className={classes[\"divider\"]}></div>\r\n                    <button className={classes[\"btn2\"]}>Search</button>\r\n                </form>\r\n                <ShowPost post={post}  GetId={GetIdHandler} SetFavorite={SetFavoriteHandler} OnComment={OnComentHandler}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import { Navigate } from \"react-router-dom\";\r\nimport VerifyTokenService from \"../../Services/VerifyTokenService\";\r\nimport { UseContext } from \"../../Services/ContextProject\";\r\n\r\nconst RequireAuth =({role, children}) => {\r\n    const {token, user} = UseContext();\r\n\r\n    if(!token){\r\n        return <Navigate replace to={\"/login\"} />\r\n    }\r\n\r\n    if(!user || user.role !== role){\r\n        return <Navigate replace to={\"/404\"} />\r\n    }\r\n\r\n    return children;\r\n}\r\n\r\nexport default RequireAuth;","\r\nconst Base_URL = \"https://posts-pw2021.herokuapp.com/api/v1\";\r\n\r\n//Puede pedir token\r\nconst UpDatePost = async (newToken, idPost, newTitle, newDescription, newImage) => {\r\n\r\n    const NewPost = await fetch(`${Base_URL}/post/update/${idPost}`,\r\n    {\r\n        method: \"PUT\",\r\n        headers: \r\n            {\r\n            'Content-Type': 'application/json',\r\n            \"Authorization\": `Bearer ${newToken}`\r\n            },\r\n        body: JSON.stringify({\r\n            title:`${newTitle}`,\r\n            description: `${newDescription}`,\r\n            image:`${newImage}`\r\n        })\r\n    });\r\n\r\n    if (NewPost.ok) {\r\n        const data = await NewPost.json();\r\n        return data;\r\n    }\r\n\r\n    return (\"\");\r\n}\r\n\r\nexport default UpDatePost;","import React, { useState, useEffect } from \"react\";\r\nimport { UseContext } from \"../Services/ContextProject\";\r\nimport classes from \"./DivUpdate.module.css\";\r\nimport UpDatePost from \"./UpDatePost\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DivUpdate = ({OnPost= () => {}}) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [idPost, setIdPost] = useState(\"\");\r\n    const { token } = UseContext();\r\n\r\n    const inSendController = async (a) => {\r\n        a.preventDefault();\r\n    }\r\n    function pushPicture() {////arreglar y revisar más tarde\r\n        function bueno() {\r\n            const funAdd = UpDatePost( token,  idPost, title, description, image);\r\n            console.log(\"Usted a realizado una nueva publicación\");\r\n            OnPost();\r\n        }\r\n        bueno();\r\n    };\r\n    return (\r\n        <div className={classes[\"baradd\"]} >\r\n            \r\n            <form onSubmit={inSendController}>\r\n            Update:\r\n                <input className={classes[\"ptn1\"]} onChange={a => setTitle(a.target.value)} id=\"titleText\" type=\"text\" placeholder=\"Title of post\" />\r\n\r\n                <input className={classes[\"ptn1\"]} onChange={a => setDescription(a.target.value)} id=\"descriptionText\" type=\"text\" placeholder=\"Add feelings\" />\r\n\r\n                <input className={classes[\"ptn1\"]} onChange={a => setImage(a.target.value)} id=\"imageText\" type=\"text\" placeholder=\"URL of img\" />\r\n\r\n                <input className={classes[\"ptn1\"]} onChange={a => setIdPost(a.target.value)} id=\"postIdText\" type=\"text\" placeholder=\"Id del post\" />\r\n\r\n                <button className={classes[\"btn1\"]} onClick={pushPicture}>Publish</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default DivUpdate;","import { useState, useEffect } from \"react\";\r\nimport Post from \"../Post/Post\";\r\nimport GetAll from \"../../components/ShowAll/GetAll/GetAll\";\r\nimport ShowAll from \"../../components/ShowAll/ShowAll\";\r\nimport ToPost from \"../ToPost/ToPost\";\r\nimport GetFavorites from \"../../components/ShowFavorites/GetFavorites/GetFavorites\";\r\nimport ShowFavorites from \"../../components/ShowFavorites/ShowFavorites\";\r\nimport GetOne from \"../../components/ShowPost/GetOne/GetOne\";\r\nimport ShowPost from \"../../components/ShowPost/ShowPost\";\r\nimport classes from \"./Admin.module.css\"\r\nimport DivUpdate from \"../../functionalities/DivUpdate\";\r\n\r\nconst Admin = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [id, setId] = useState(null);\r\n    const [post, setPost] = useState(null);\r\n    const [like, setLike] = useState(null);\r\n    const [favorite, setFavorite] = useState(null);\r\n    const [commentFlag, setCommentFlag] = useState(false);\r\n    const [TooglePost, setTooglePost] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const data = await GetAll(10, page);\r\n                setPosts(data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        fetchPosts();\r\n    }, [page, like, commentFlag, TooglePost]);\r\n\r\n    useEffect(() => {\r\n        const GetFavs = async () => {\r\n            try {\r\n                const favs = await GetFavorites();\r\n                setFavorites(favs);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        GetFavs();\r\n    }, [favorite, like, commentFlag]);\r\n\r\n    const Previous = () => {\r\n        if (page != 0) {\r\n            setPage(page - 1);\r\n        }\r\n    }\r\n\r\n    const Next = () => {\r\n        setPage(page + 1);\r\n    }\r\n\r\n    const SearchPost = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(id);\r\n        const OnePost = await GetOne(id);\r\n        if (OnePost === undefined) {\r\n            console.log(OnePost);\r\n            setPost(\"\");\r\n        }\r\n        else {\r\n            console.log(OnePost);\r\n            setPost(OnePost);\r\n        }\r\n\r\n    }\r\n\r\n    const onPostHandler = () => {\r\n        setTooglePost(!TooglePost);\r\n    }\r\n\r\n    const OnComentHandler = () => {\r\n        setCommentFlag(!commentFlag);\r\n    }\r\n\r\n    const GetIdHandler = async (id) => {\r\n        console.log(id);\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const Handlerlike = await fetch(`https://posts-pw2021.herokuapp.com/api/v1/post/like/${id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        console.log(Handlerlike);\r\n        setLike(Handlerlike);\r\n\r\n        console.log(like)\r\n    }\r\n\r\n    const SetFavoriteHandler = async (id) => {\r\n        console.log(id);\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const favorite = await fetch(`https://posts-pw2021.herokuapp.com/api/v1/post/fav/${id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        });\r\n        setFavorite(favorite);\r\n    }\r\n\r\n    return (\r\n        <div className={classes[\"favs\"]}>\r\n            <Post OnOwnedPost={onPostHandler} />\r\n            <ToPost OnPost={onPostHandler} />\r\n            <DivUpdate OnPost={onPostHandler} />\r\n            <ShowAll posts={posts} GetId={GetIdHandler} SetFavorite={SetFavoriteHandler} OnComment={OnComentHandler} />\r\n            <div className={classes[\"wrapper\"]} >\r\n                <div className={classes[\"divider\"]}></div>\r\n                <button className={classes[\"btn2\"]} onClick={Previous} type=\"click\">Previous Page</button>\r\n                <div className={classes[\"divider\"]}></div>\r\n                <button className={classes[\"btn2\"]} onClick={Next} type=\"click\">Next Page</button>\r\n                <div>\r\n            </div>\r\n\r\n                <hr />\r\n                <h2> Favorites</h2>\r\n                <ShowFavorites favorites={favorites} GetId={GetIdHandler} SetFavorite={SetFavoriteHandler} OnComment={OnComentHandler} />\r\n            </div>\r\n            <div className={classes[\"search\"]}>\r\n                <h2>Search specific post</h2>\r\n                <form onSubmit={SearchPost}>\r\n                    <label htmlFor=\"Buscar_post\">Insert Id:</label>\r\n                    <div className={classes[\"divider\"]}></div>\r\n                    <input className={classes[\"ptn2\"]} type=\"text\" name=\"Buscar_post\" onChange={e => setId(e.target.value)} />\r\n                    <div className={classes[\"divider\"]}></div>\r\n                    <button className={classes[\"btn2\"]}>Search</button>\r\n                </form>\r\n                <ShowPost post={post} GetId={GetIdHandler} SetFavorite={SetFavoriteHandler} OnComment={OnComentHandler} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin;","import VerifyTokenService from \"../../Services/VerifyTokenService\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { UseContext } from \"../../Services/ContextProject\";\r\n\r\nconst rolePages = {\r\n    \"admin\": \"/admin\",\r\n    \"user\": \"/user\"\r\n}\r\n\r\nconst Redirect = () => {\r\n    const { user } = UseContext();\r\n\r\n    if (!user) {\r\n        return (<p>No se puede redireccionar</p>)\r\n    }\r\n\r\n    return <Navigate replace to={rolePages[user.role] ?? \"/\"} />;\r\n}\r\n\r\nexport default Redirect;","import {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  Navigate\r\n} from \"react-router-dom\";\r\nimport Login from './pages/Login/Login';\r\nimport User from './pages/User/User';\r\nimport RequireAuth from \"./components/RequireAuth/RequireAuth\";\r\nimport Admin from \"./pages/Admin/Admin\";\r\nimport Error from \"./pages/Error/Error\";\r\nimport Redirect from \"./pages/Redirect/Redirect\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigate replace to={\"/login\"} />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/redirect\" element={<Redirect />} />\r\n        <Route\r\n          path=\"/user\"\r\n          element={\r\n            <RequireAuth role=\"user\">\r\n              <User />\r\n            </RequireAuth>\r\n          } />\r\n        <Route\r\n          path=\"/admin\"\r\n          element={\r\n            <RequireAuth role=\"admin\">\r\n              <Admin />\r\n            </RequireAuth>\r\n          } />\r\n        <Route path=\"/*\" element={ \r\n        <div>\r\n            <main>\r\n              <form>\r\n                <h1>404</h1> <h3>Sorry, the page not found</h3>\r\n                <p> The page you requested could not be found </p>\r\n                <img\r\n                  src=\"https://www.wallpaperup.com/uploads/wallpapers/2014/09/25/455955/45cc249825d1d76d509d0aa81a67adb5.jpg\"\r\n                  alt=\"error\" width=\"500\" height=\"600\" />\r\n              </form>\r\n            </main>\r\n          </div>} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {ContextProject} from './Services/ContextProject';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProject>\r\n    <App />\r\n    </ContextProject>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}